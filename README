Προγραμματισμός Συστήματος - Κ24 - Project1

Ον/μο : Αλέξης Χάιδος

Α.Μ. : 1115201300197


Σχετικά με την εργασία :

Μεσα στο αρχείο sdi1300197-project1.tar υπάρχει ένα αρχείο Makefile το οποίο μας βοηθάει στο compile της εργασίας. Με την εντολή
make γίνεται το compile και δημιουργούνται όλα τα .o files καθώς και το εκτελέσιμο "bitcoin ".

Ενδεικτική εκτέλεση της εφαρμογής μας είναι η εξής : ./bitcoin BalancesFile TransactionFile 1000 5 5 4 

		όπου	 1000 -> bitcoin value
	          	    5 -> number of elements για το hashtable με τους senders
			    5 -> number of elements για το hashtable με τους receivers
			    4 -> bucket size 


H εργασία μου αποτελείται από τα εξής αρχεία : bitcoinApp.cpp hashtable.cpp hashtable.h hashwallet.cpp hashwallet.h linkedlist.cpp linkedlist.h headers.h


BitcoinApp.cpp : Εδώ βρίσκεται η main μας , μέσα στην οποία αρχικοποιούνται όλες οι δομές που μας ζητήθηκαν , γίνεται η εισαγωγή των αρχείων .txt που δόθηκαν
		 απο την γραμμή εντολής στις δομές μαζί με ότι περιορισμούς ζητήθηκαν .(Έχει γίνει παραδοχή σε περίπτωση ίδιου bitcoin απο το αρχείο balances
		 η εφαρμογή να τερματίζει,σε αντίθεση με ένα εσφαλμένο transaction που απλα δεν το λαμβάνω υπόψιν και πηγαίνω στο επόμενο).
		 Τέλος στην main γίνεται η υλοποίηση των ερωτημάτων που ζητήθηκαν.
		 ++ Υπάρχουν και κάποιες συναρτήσεις split οι οποίες με βοήθησαν να κάνω split τα αρχεία balances και transaction καθώς και το input που δίνει
		 ο χρήστης .

	
	
hashwallet.cpp : Έδώ υπάρχει το πρώτο hashtable της εργασίας (δομή δικής μας επιλογής ), στο οποίο κρατάμε τo wallet των χρηστών που υπήρχαν στο BalancesFile.
		 Κάθε hashtable είναι ένας πίνακας όπου κάθε θέση του πίνακα είναι ένας δείκτης σε μια λίστα απο buckets.Κάθε bucket είναι ένας πίνακας απο 
		 WalletElement. Κάθε WalletElement είναι μια κλάση που περιέχει το walletId κάθε χρήστη, το συνολικό ποσό σε $ που έχει μέσα στο πορτοφόλι του
		 καθώς και ένα δείκτη σε μια δευτερεύουσα λίστα όπου κάθε κόμβος της λίστας περιέχει το bitcoin που έχει στην κατοχή του και την αξία του κάθε 
		 bitcoin. (Πχ ο χρήστης KeithFlint έχει τα εξής bitcoins : 265 και 756 ,τότε θα έχει 2 listnodes ένα για κάθε bitcoin) . Η λίστα μας είναι υλο-
		 ποιημένη στο αρχείο linkedlist.h .


		 

hashtable.cpp : Έδώ υπάρχει το hashtable της εργασίας για τους senders και τους receivers , στο οποίο κρατάμε το wallet των χρηστών που έχουν στείλει και έχουν 
		λάβει κάποιο bitcoin απο μία συνναλαγη αντίστοιχα . Η δομή του hashtable είναι ίδια με του hashwallet όμως εδώ, μέσα στο BucketElement κρατάμε το
	        WalletId κάθε χρήστη και ένα δείκτη σε μια δευτερεύουσα λίστα όπου κάθε κόμβος της λίστας περιέχει πληροφορίες για τα transaction που έχει συμμετά-
	        σχει ο κάθε χρηστης . ( Πχ στο hashtable για τους senders περιέχονται οι χρήστες που έχουν στείλει χρήματα και στα listnode του κάθε χρήστη υπάρχει
		η συναλλαγή που έχει συμμετάσχει ως sender) . Γι ' αυτό το hashtable έχει δημιουργηθεί μια άλλη λίστα η οποία περιέχεται και αυτη στο αρχείο --> linkedlist.h .
  

Σημείωση : Στην εργασία έχουν υλοποιηθεί τα εξής queries : walletStatus , requestTransaction , requestTransactions(multiple inputs from keyboard / όχι input file) ,
							   findPayments , findEarnings , bitCoinStatus και exit .

Σημείωση : Ότι συνάρτηση βρέθηκε online αναφέρεται μέσα στην εργασία με το αντίστοιχο link της . 
